{
    "name": "quorum",
    "hash": "bafybeihgkrnnwfjscb2wo4rymzfpubjlqvury74ggcvmsilvxc6vzrlc6a",
    "description": "Sophisticated autonomous voting agent for DAO governance with AI-powered proposal analysis",
    "image": "",
    "service_version": "0.2.0",
    "home_chain": "base",
    "configurations": {
        "base": {
            "agent_id": 76,
            "nft": "bafybeie65whvrfjdobhuqadutwpcwx22bnpty2yveu6j4x2dcithfhlnea",
            "threshold": 1,
            "use_mech_marketplace": true,
            "fund_requirements": {
                "0x0000000000000000000000000000000000000000": {
                    "agent": 5000000000000000,
                    "safe": 15000000000000000
                }
            }
        }
    },
    "env_variables": {
        "CONNECTION_CONFIGS_CONFIG_SAFE_CONTRACT_ADDRESSES": {
            "name": "Safe contract addresses",
            "description": "JSON string of Safe addresses per chain",
            "value": "",
            "provision_type": "user"
        },
        "MONITORED_DAOS": {
            "name": "Monitored DAOs",
            "description": "Default DAO for agent.",
            "value": "quorum-ai.eth",
            "provision_type": "user"
        },
        "OPENROUTER_API_KEY": {
            "name": "OpenRouter API Key",
            "description": "Get from OpenRouter",
            "value": "sk-abc123",
            "provision_type": "user"
        },
        "BASE_RPC_URL": {
            "name": "Base RPC URL",
            "description": "Use to run with docker",
            "value": "http://host.docker.internal:8545",
            "provision_type": "user"
        },
        "BASE_LEDGER_RPC": {
            "name": "ase RPC URL",
            "description": "Use to run with docker",
            "value": "http://host.docker.internal:8545",
            "provision_type": "user"
        },
        "CONNECTION_CONFIGS_CONFIG_SNAPSHOT_GRAPHQL_ENDPOINT": {
            "name": "SNAPSHOT_GRAPHQL_ENDPOINT",
            "description": "The GraphQL endpoint for Snapshot's testnet.",
            "value": "https://testnet.hub.snapshot.org/graphql",
            "provision_type": "user"
        },
        "CONNECTION_CONFIGS_CONFIG_SNAPSHOT_HUB_URL": {
            "name": "SNAPSHOT_HUB_URL",
            "description": "The URL for Snapshot's testnet hub.",
            "value": "https://testnet.seq.snapshot.org/",
            "provision_type": "user"
        },
        "SNAPSHOT_GRAPHQL_ENDPOINT": {
            "name": "SNAPSHOT_GRAPHQL_ENDPOINT",
            "description": "The GraphQL endpoint for Snapshot's testnet.",
            "value": "https://testnet.hub.snapshot.org/graphql",
            "provision_type": "computed"
        },
        "SNAPSHOT_HUB_URL": {
            "name": "SNAPSHOT_HUB_URL",
            "description": "The URL for Snapshot's testnet hub.",
            "value": "https://testnet.seq.snapshot.org/",
            "provision_type": "computed"
        },
        "EAS_SCHEMA_UID": {
            "name": "EAS_SCHEMA_UID",
            "description": "Attestation schema UID for Quorum",
            "value": "0xc93c2cd5d2027a300cc7ca3d22b36b5581353f6dabab6e14eb41daf76d5b0eb4",
            "provision_type": "computed"
        }
    }
}